from sqlalchemy import create_engine, text
import pandas as pd
import os

# üöÄ K·∫øt n·ªëi ƒë·∫øn PostgreSQL (C·∫≠p nh·∫≠t th√¥ng tin c·ªßa b·∫°n)
DATABASE_URL = "postgresql://data_owner:npg_lXG4nWhfUk0P@ep-cold-tooth-a1p19dl8-pooler.ap-southeast-1.aws.neon.tech/data?sslmode=require"
engine = create_engine(DATABASE_URL)
# K·∫øt n·ªëi ƒë·∫øn PostgreSQL
try:
    engine = create_engine(DATABASE_URL)
    with engine.connect() as connection:
        print("‚úÖ K·∫øt n·ªëi PostgreSQL th√†nh c√¥ng!")
        
        # Truy v·∫•n b·∫£ng `bao_cao_kqkd`
        query = text("SELECT * FROM bao_cao_kqkd")
        result = connection.execute(query)
        df = pd.DataFrame(result.fetchall(), columns=result.keys())
        
        # Ki·ªÉm tra d·ªØ li·ªáu
        if not df.empty:
            print("‚úÖ D·ªØ li·ªáu ƒë√£ ƒë∆∞·ª£c truy xu·∫•t th√†nh c√¥ng!")
            print(df.head())  # Hi·ªÉn th·ªã 5 d√≤ng ƒë·∫ßu ti√™n
        else:
            print("‚ö†Ô∏è B·∫£ng `bao_cao_kqkd` kh√¥ng c√≥ d·ªØ li·ªáu.")
except Exception as e:
    print(f"‚ùå L·ªói k·∫øt n·ªëi PostgreSQL: {e}")
    print("‚ö†Ô∏è Vui l√≤ng ki·ªÉm tra l·∫°i c·∫•u h√¨nh k·∫øt n·ªëi.")
